<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>二零一七年终总结</title>
      <link href="/2018/01/22/2017-conclusion/"/>
      <url>/2018/01/22/2017-conclusion/</url>
      
        <content type="html"><![CDATA[<div align="middle"><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&id=407679465&auto=1&height=66"></iframe></div><p>时间过得很快，终于等到放寒假了，虽然这几个月没有课，天天和放假也没啥区别呢。细数一下，还有5个月就要毕业了吧，大一刚入学的场景却依然清楚地记得，转眼间就成了老学长了呢。闲来无事，随便写写，有感而发，无病呻吟而已。</p><h1 id="2017"><a href="#2017" class="headerlink" title="2017"></a>2017</h1><hr><p>回顾我的2017，没做什么事，令我能记得就3件大事吧：</p><ul><li>失恋ing</li><li>ACM退役</li><li>顺利保研</li></ul><p><strong>第一件事</strong>就不想过多回忆了，<strong>2014.12.13 ~ 2017.03.01</strong>，曲终人散。<br><img src="749826.jpg" alt><br>最后引用《我的少女时代》里的一句话吧。</p><blockquote><p>每人都有一颗林真心，遇见是最美好的小幸运，谢谢你出现在我的青春里。</p></blockquote><p><img src="1.jpg" alt><br><strong>第二件事</strong>其实也是黯淡退出吧，大三下开始课程繁忙，也就没怎么训练了，再加上暑假考驾照，于是乎就退役了。回顾三年来，从大一入学时电脑都没怎么碰过的小白，到现在算法也略有所知，也是付出过很大的努力吧，毕竟当年每天刷题，为了一个bug而熬夜到凌晨。最后也算是混了个水水的金牌，奖项不算耀眼。但最重要的是从这段经历中，学到了拼搏、坚持的一种精神，这对以后的研究生涯想必也有很大帮助。<br><img src="2.jpg" alt><br><strong>第三件事</strong>也是意料之中吧，没有什么波折。纠结了很多，虽然<strong>专业第一</strong>，但是最后还是选择保了本校。要问原因，也许是校园情怀，也许是导师人很好，也许是为了方便更早研究，也许就是懒吧。现在尘埃落定，靠人靠天不如靠自己，继续努力吧。<br><img src="3.jpg" alt></p><p>过去的一年，学业未有很大长进，看着同学们整页的4.0绩点，心里倒也没有什么不平衡了。下学期保了研之后选了一门研究生的文本挖掘课，也马马虎虎读了几十篇论文，也算是对自然语言处理和深度学习入了个门，最后的presentation做的还算满意。</p><h1 id="2018"><a href="#2018" class="headerlink" title="2018"></a>2018</h1><hr><p>今年最重要的大事莫过于毕业论文了，因为以后要做的方向是句法分析，所以导师给我的毕业论文安排的就是《基于循环神经网络的成分句法分析》。虽然说是基于ACL2013的一篇论文改编的，但是目前为止，我还没有发现有人做和这个完全一样的。也许最后写的好的话可以直接发paper了。</p><p>但是目前基本的框架还没完全搭建起来吧，代码还不是很熟练，现在只写了一个最基础的动态规划+RNN。最近有如下计划：</p><ul><li>准备试一下动态规划+LSTM。</li><li>然后动态规划扩增一个维度，用来保存左右结点的head结点。</li><li>如果这个写好了，就可以和我github找到的PCFG+CYK代码融合了，准备加上每个结点的POS。</li><li>最后加入预训练词向量应该就基本完成了。</li></ul><p>希望能顺利毕业吧，前一段时间一直对一些实现细节有些困惑，代码还写错了，还以为理论错了。也不知道最后出来的结果会怎么样，希望能不错。</p><p>生活方面，最近半年越来越懒了，极少出门，睡得晚，起的也晚。最近买了把尤克里里，也算是陶冶陶冶情操吧，不至于一直盯着电脑。现在也小有长进，能弹一点点了。</p><p>现在能聊天的人越来越少了，QQ微信放那一天也不一定会有人来找，就算有人也多半是咨询问题的，等一个可以交心的人吧。有时我也想过，我是不是太像中央空调了，对所有人都这么有耐心，到头来却还是一个人，付出那么多最后还是一无所有。<br><img src="4.jpg" alt><br>最后还是祝自己2018年顺利吧，希望毕业顺利，研究生涯小有收获，最后等一个有缘人吧。</p><blockquote><p>我遇见谁，会有怎样的对白。<br>我等的人，她在多远的未来。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 随笔 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python基础</title>
      <link href="/2018/01/22/aaaaaaaaaaaaaaa/"/>
      <url>/2018/01/22/aaaaaaaaaaaaaaa/</url>
      
        <content type="html"><![CDATA[<div align="middle"><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&id=407679465&auto=1&height=66"></iframe></div><p>时间过得很快，终于等到放寒假了，虽然这几个月没有课，天天和放假也没啥区别呢。细数一下，还有5个月就要毕业了吧，大一刚入学的场景却依然清楚地记得，转眼间就成了老学长了呢。闲来无事，随便写写，有感而发，无病呻吟而已。</p><h3 id="1-this-is-flag"><a href="#1-this-is-flag" class="headerlink" title="1.this_is_flag"></a>1.this_is_flag</h3><p>Most flags are in the form flag{xxx}, for example:flag{th1s_!s_a_d4m0_4la9}</p><p>送分题</p><pre><code>flag{th1s_!s_a_d4m0_4la9}</code></pre><h3 id="2-ext3"><a href="#2-ext3" class="headerlink" title="2.ext3"></a>2.ext3</h3><p>在linux下使用strings查看字符串，定位文件位置</p><pre><code>╭─birdpwn@ubuntu ~/Question ╰─$ strings ext3_linux |  grep flag.flag.txt.swpflag.txtt.swx~root/Desktop/file/O7avZhikgKgbF/flag.txt.flag.txt.swpflag.txtt.swx.flag.txt.swpflag.txtt.swx</code></pre><p>使用mount挂载文件系统,base64转码即可</p><pre><code>╭─birdpwn@ubuntu ~/Question ╰─$ sudo mount ext3_linux /mnt [sudo] password for birdpwn: ╭─birdpwn@ubuntu ~/Question ╰─$ cat /mnt/O7avZhikgKgbF/flag.txt                                                                 ZmxhZ3tzYWpiY2lienNrampjbmJoc2J2Y2pianN6Y3N6Ymt6an0=╭─birdpwn@ubuntu ~/Question ╰─$ base64 -d /mnt/O7avZhikgKgbF/flag.txt       flag{sajbcibzskjjcnbhsbvcjbjszcszbkzj}%    </code></pre><p>或使用binwalk提取文件</p><pre><code>╭─birdpwn@ubuntu ~/Question ╰─$ binwalk -e ext3_linux DECIMAL       HEXADECIMAL     DESCRIPTION--------------------------------------------------------------------------------0             0x0             Linux EXT filesystem, rev 1.0, ext3 filesystem data, UUID=cf6d7bff-c377-403f-84ae-956ce3c9e3c94127744       0x3EFC00        Executable script, shebang: &quot;/usr/bin/env bash&quot;4127773       0x3EFC1D        Unix path: /stackoverflow.com/questions/13400312/linux-create-random-directory-file-hierarchy6468716       0x62B46C        Unix path: /media/test/o8/huas.txt8388608       0x800000        Linux EXT filesystem, rev 1.0, ext3 filesystem data, UUID=cf6d7bff-c377-403f-84ae-956ce3c9e3c98688640       0x849400        Linux EXT filesystem, rev 1.0, ext3 filesystem data, UUID=cf6d7bff-c377-403f-84ae-956ce3c9e3c98696832       0x84B400        Linux EXT filesystem, rev 1.0, ext3 filesystem data, UUID=cf6d7bff-c377-403f-84ae-956ce3c9e3c98697992       0x84B888        Unix path: /home/anonymous/Desktop/file8705024       0x84D400        Linux EXT filesystem, rev 1.0, ext3 filesystem data, UUID=cf6d7bff-c377-403f-84ae-956ce3c9e3c98706184       0x84D888        Unix path: /home/anonymous/Desktop/file8713216       0x84F400        Linux EXT filesystem, rev 1.0, ext3 filesystem data, UUID=cf6d7bff-c377-403f-84ae-956ce3c9e3c98714376       0x84F888        Unix path: /home/anonymous/Desktop/file9114276       0x8B12A4        Minix filesystem, V1, little endian, 30 char names, 0 zones9298944       0x8DE400        Linux EXT filesystem, rev 1.0, ext3 filesystem data, UUID=cf6d7bff-c377-403f-84ae-956ce3c9e3c99308160       0x8E0800        Linux EXT filesystem, rev 1.0, ext3 filesystem data, UUID=cf6d7bff-c377-403f-84ae-956ce3c9e3c99324544       0x8E4800        Linux EXT filesystem, rev 1.0, ext3 filesystem data, UUID=cf6d7bff-c377-403f-84ae-956ce3c9e3c99345024       0x8E9800        Linux EXT filesystem, rev 1.0, ext3 filesystem data, UUID=cf6d7bff-c377-403f-84ae-956ce3c9e3c99372956       0x8F051C        Minix filesystem, V1, little endian, 0 zones9373348       0x8F06A4        Minix filesystem, V1, little endian, 30 char names, 0 zones13712384      0xD13C00        JPEG image data, JFIF standard 1.0116832164      0x100D6A4       Minix filesystem, V1, little endian, 30 char names, 0 zones╭─birdpwn@ubuntu ~/Question ╰─$ cat _ext3_linux.extracted/ext-root/O7avZhikgKgbF/flag.txt                                       ZmxhZ3tzYWpiY2lienNrampjbmJoc2J2Y2pianN6Y3N6Ymt6an0=╭─birdpwn@ubuntu ~/Question ╰─$ base64 -d _ext3_linux.extracted/ext-root/O7avZhikgKgbF/flag.txtflag{sajbcibzskjjcnbhsbvcjbjszcszbkzj}%                                 </code></pre><h3 id="3-give-you-flag"><a href="#3-give-you-flag" class="headerlink" title="3.give_you_flag"></a>3.give_you_flag</h3><p>小龙人数完钞票会展示二维码，使用stegsolve等工具查看帧数得到二维码</p><p><img src="C:%5CUsers%5CAdministrator%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1564544167945.png" alt="1564544167945"></p><p>使用美图，PS工具修复二维码</p><p>二维码缺少三个小方块，而这些小方块被称为定位图案，用于标记二维码矩形的大小，用三个定位图案可以标识并确定一个二维码矩形的位置和方向。</p><p>扫码得到flag</p><p><img src="C:%5CUsers%5CAdministrator%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1564544257339.png" alt="1564544257339"></p><pre><code>flag{e7d478cf6b915f50ab1277f78502a2c5</code></pre><h3 id="4-pdf"><a href="#4-pdf" class="headerlink" title="4.pdf"></a>4.pdf</h3><p>猜测flag值在图片底下，wps将pdf转为word格式后，将图片移走发现flag</p><p>在线转换地址：<code>http://app.xunjiepdf.com/pdf2word</code></p><p><img src="C:%5CUsers%5CAdministrator%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1564545708967.png" alt="1564545708967"></p><pre><code>flag{security_through_obscurity}</code></pre><h3 id="5-SimpleRAR"><a href="#5-SimpleRAR" class="headerlink" title="5.SimpleRAR"></a>5.SimpleRAR</h3><p>解压不了，使用010editor修改文件头A8 3C 7A -&gt; A8 3C 74 </p><p><img src="C:%5CUsers%5CAdministrator%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1564546156903.png" alt="1564546156903"></p><p>保存后解压sercet.png ，文件头是gif</p><p><img src="C:%5CUsers%5CAdministrator%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1564546267494.png" alt="1564546267494"></p><p>stegsolve发现两个图层</p><p><img src="C:%5CUsers%5CAdministrator%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1564546636164.png" alt="1564546636164"></p><p><img src="C:%5CUsers%5CAdministrator%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1564546728762.png" alt="1564546728762"></p><p>拼接在一起扫码得到flag</p><p><img src="C:%5CUsers%5CAdministrator%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1564546910134.png" alt="1564546910134"></p><pre><code>flag{yanji4n_bu_we1shi}</code></pre><h3 id="6-坚持60s"><a href="#6-坚持60s" class="headerlink" title="6.坚持60s"></a>6.坚持60s</h3><p>呵呵呵呵</p><p><img src="C:%5CUsers%5CAdministrator%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1564547235905.png" alt="1564547235905"></p><p>jd_gui打开，在源码里面发现了flag</p><p><img src="C:%5CUsers%5CAdministrator%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1564547306254.png" alt="1564547306254"></p><p>base64转一下</p><p><img src="C:%5CUsers%5CAdministrator%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1564547382992.png" alt="1564547382992"></p><pre><code>flag{DajiDali_JinwanChiji}</code></pre><h3 id="7-gif"><a href="#7-gif" class="headerlink" title="7.gif"></a>7.gif</h3><p>解压后是这玩意</p><p><img src="C:%5CUsers%5CAdministrator%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1564548029871.png" alt="1564548029871"></p><p>白色定为0，黑色定为1，前8个转换字符为f，根据这个思路写脚本跑一下</p><pre class="line-numbers language-python"><code class="language-python">py <span class="token keyword">import</span> oswhite <span class="token operator">=</span> open<span class="token punctuation">(</span><span class="token string">"./gif/0.jpg"</span><span class="token punctuation">,</span> <span class="token string">"rb"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span> black <span class="token operator">=</span> open<span class="token punctuation">(</span><span class="token string">"./gif/1.jpg"</span><span class="token punctuation">,</span> <span class="token string">"rb"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span>flag_binary <span class="token operator">=</span> <span class="token string">""</span><span class="token keyword">for</span> i <span class="token keyword">in</span> range<span class="token punctuation">(</span><span class="token number">104</span><span class="token punctuation">)</span><span class="token punctuation">:</span>     <span class="token keyword">with</span> open<span class="token punctuation">(</span><span class="token string">"./gif/%d.jpg"</span><span class="token operator">%</span>i<span class="token punctuation">,</span><span class="token string">"rb"</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>         <span class="token keyword">if</span> f<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> white<span class="token punctuation">:</span>             flag_binary <span class="token operator">+=</span> <span class="token string">"0"</span>         <span class="token keyword">else</span><span class="token punctuation">:</span>             flag_binary <span class="token operator">+=</span> <span class="token string">"1"</span>flag <span class="token operator">=</span> <span class="token string">""</span><span class="token keyword">for</span> i <span class="token keyword">in</span> range<span class="token punctuation">(</span>len<span class="token punctuation">(</span>flag_binary<span class="token punctuation">)</span><span class="token operator">/</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">:</span>     flag <span class="token operator">+=</span> chr<span class="token punctuation">(</span>int<span class="token punctuation">(</span>flag_binary<span class="token punctuation">[</span>i<span class="token operator">*</span><span class="token number">8</span><span class="token punctuation">:</span><span class="token punctuation">(</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token number">8</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span> flag<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>得到flag</p><pre><code>╭─birdpwn@ubuntu ~/Question ╰─$ python gif.py                                                                                                                                                                                     130 ↵flag{FuN_giF}</code></pre><h3 id="8-掀桌子"><a href="#8-掀桌子" class="headerlink" title="8.掀桌子"></a>8.掀桌子</h3><pre><code>菜狗截获了一份报文如下c8e9aca0c6f2e5f3e8c4efe7a1a0d4e8e5a0e6ece1e7a0e9f3baa0e8eafae3f9e4eafae2eae4e3eaebfaebe3f5e7e9f3e4e3e8eaf9eaf3e2e4e6f2，生气地掀翻了桌子(╯°□°）╯︵ ┻━┻</code></pre><p>使用脚本输出</p><pre class="line-numbers language-python"><code class="language-python">hexstr <span class="token operator">=</span> <span class="token string">"c8e9aca0c6f2e5f3e8c4efe7a1a0d4e8e5a0e6ece1e7a0e9f3baa0e8eafae3f9e4eafae2eae4e3eaebfaebe3f5e7e9f3e4e3e8eaf9eaf3e2e4e6f2"</span> flag <span class="token operator">=</span> <span class="token string">""</span><span class="token keyword">print</span><span class="token punctuation">(</span>len<span class="token punctuation">(</span>hexstr<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">while</span> len<span class="token punctuation">(</span>hexstr<span class="token punctuation">)</span><span class="token punctuation">:</span>    flag <span class="token operator">=</span> flag<span class="token operator">+</span>chr<span class="token punctuation">(</span>int<span class="token punctuation">(</span>hexstr<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token number">16</span><span class="token punctuation">)</span><span class="token operator">%</span><span class="token number">128</span><span class="token punctuation">)</span>    hexstr <span class="token operator">=</span> hexstr<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token keyword">print</span><span class="token punctuation">(</span>flag<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>得到flag</p><pre><code>─birdpwn@ubuntu ~/Question ╰─$ python xianzhuzi.py118Hi, FreshDog! The flag is: hjzcydjzbjdcjkzkcugisdchjyjsbdfr</code></pre><h3 id="9-如来十三掌"><a href="#9-如来十三掌" class="headerlink" title="9.如来十三掌"></a>9.如来十三掌</h3><p>这都是啥</p><p><img src="C:%5CUsers%5CAdministrator%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1564560326771.png" alt="1564560326771"></p><p>据说可以佛语解密</p><p><a href="http://keyfc.net/bbs/tools/tudoucode.aspx" target="_blank" rel="noopener">http://keyfc.net/bbs/tools/tudoucode.aspx</a></p><p><img src="C:%5CUsers%5CAdministrator%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1564560497528.png" alt="1564560497528"></p><p>rot13解码再base64就能拿到flag</p><p><a href="http://www.rot13.de/index.php" target="_blank" rel="noopener">http://www.rot13.de/index.php</a></p><pre><code>ZmxhZ3tiZHNjamhia3ptbmZyZGhidmNraWpuZHNrdmJramRzYWJ9</code></pre><p><img src="C:%5CUsers%5CAdministrator%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1564560670584.png" alt="1564560670584"></p><pre><code>flag{bdscjhbkzmnfrdhbvckijndskvbkjdsab}</code></pre><h3 id="10-功夫再高也怕菜刀"><a href="#10-功夫再高也怕菜刀" class="headerlink" title="10.功夫再高也怕菜刀"></a>10.功夫再高也怕菜刀</h3><p>kali下用foremost解包，里面是flag.txt文件</p><pre><code>oot@0xbirdkali:~/misc# foremost 6666.pcapng Processing: 6666.pcapng|foundat=flag.txtC����cS���J��Ea�v�                                     ��&amp;e$K��2%�$��,�=�J��1p��p46PK?*|</code></pre><p>wireshark打开文件，分组字节流查找flag.txt，查找到第1150个包时，追踪流看到：</p><p><img src="C:%5CUsers%5CAdministrator%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1564561989653.png" alt="1564561989653"></p><p>分组字节流搜索6666.jpg，并追踪TCP流，找到jpg文件的文件头和文件尾并复制</p><p><img src="C:%5CUsers%5CAdministrator%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1564562734999.png" alt="1564562734999"></p><p><img src="C:%5CUsers%5CAdministrator%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1564562749949.png" alt="1564562749949"></p><p>010editor保存为jpg</p><p><img src="C:%5CUsers%5CAdministrator%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1564562784146.png" alt="1564562784146"></p><p>压缩包密码得到flag</p><pre><code>flag{3OpWdJ-JP6FzK-koCMAK-VkfWBq-75Un2z}flag{3OpWdJ-JP6FzK-koCMAK-VkfWBq-75Un2z}</code></pre><h3 id="11-stegano"><a href="#11-stegano" class="headerlink" title="11.stegano"></a>11.stegano</h3><p>查看pdf info看到关键字Keywords里有像flag的东西</p><pre><code>root@0xbirdkali:~/misc# pdfinfo stegano.pdf Title:          polar bear during a snow stormSubject:        &lt;| tr AB .- |&gt;Keywords:       Could this be the flag? : Tm9wZSAsIG5vdCBoZXJlIDspCg==Author:         KeiDiiCreator:        LaTeX /o/Producer:       find mr.morse textCreationDate:   Fri Mar 14 05:33:50 2014 CSTModDate:        Fri Mar 14 05:33:50 2014 CSTTagged:         noUserProperties: noSuspects:       noForm:           noneJavaScript:     noPages:          1Encrypted:      noPage size:      595.276 x 841.89 pts (A4)Page rot:       0File size:      38742 bytesOptimized:      noPDF version:    1.5</code></pre><p>pdftotext stegano50.pdf 查看文本信息,仍然没发现flag</p><p><img src="C:%5CUsers%5CAdministrator%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1564563215667.png" alt="1564563215667"></p><p>将pdf用浏览器打开复制文本然后用记事本打开</p><p><img src="C:%5CUsers%5CAdministrator%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1564563446658.png" alt="1564563446658"></p><p>之前的<code>Subject: &lt;| tr AB .- |&gt;</code>意思应该是转换为摩斯密码解码即得到flag</p><p><img src="C:%5CUsers%5CAdministrator%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1564563680278.png" alt="1564563680278"></p><p>转换摩斯密码</p><p><a href="http://www.zhongguosou.com/zonghe/moErSiCodeConverter.aspx" target="_blank" rel="noopener">http://www.zhongguosou.com/zonghe/moErSiCodeConverter.aspx</a></p><p><img src="C:%5CUsers%5CAdministrator%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1564563921460.png" alt="1564563921460"></p><pre><code>CONGRATULATIONSFLAG1NV151BL3M3554G3</code></pre><h3 id="12-base64stego"><a href="#12-base64stego" class="headerlink" title="12.base64stego"></a>12.base64stego</h3><p>首先打开文件发现有密码，看了没其他提示之后猜测可能是伪加密，伪加密原理可参考</p><pre><code>https://blog.csdn.net/kajweb/article/details/76474476</code></pre><p>010editor打开文件，搜索16进制504B会有3个结果，定位到第二个之后将09 00修改为00 00 然后保存 </p><p><img src="C:%5CUsers%5CAdministrator%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1564564652961.png" alt="1564564652961"></p><p>之后压缩文件就可以正常打开了。</p><p>打开文本后会发现很多base64密码，这里涉及到base64隐写术，感兴趣的可以上网去查一下 </p><p><img src="C:%5CUsers%5CAdministrator%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1564564698304.png" alt="1564564698304"></p><ul><li>之后压缩文件就可以正常打开了</li><li>原始文本中的3个字符（3x8 = 24位）被转换为4个6位编码字符。</li><li>长文本被分成3个组，规则1被应用于每个组。</li><li>如果最后一组包含2个字符，<ul><li>8位字符中的2个（2x8 = 16）由3位6位编码字符（3x6 = 18）表示，并添加“=”字符</li><li>对于具有空2位的原始16位，编码的18位就足够了。</li></ul></li><li>2位是隐身的空间!!!!!!!!!!</li><li>上例中的最后4个字符： <code>b m V = 011011 100110 010101 ====== 01101110 01100101 01 ======    n e ^^                   stego bits</code></li></ul><p>同样，尾部带有’==’的行包含4个stego位。</p><p>连接所有的stego位，每8位chr（），我们可以看到标志。</p><p>标志是Base_sixty_four_point_five。</p><p>具体利用脚本如下</p><pre class="line-numbers language-python"><code class="language-python">ef get_base64_diff_value<span class="token punctuation">(</span>s1<span class="token punctuation">,</span> s2<span class="token punctuation">)</span><span class="token punctuation">:</span>   base64chars<span class="token operator">=</span><span class="token string">'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'</span>   res <span class="token operator">=</span> <span class="token number">0</span>   <span class="token keyword">for</span> i <span class="token keyword">in</span> xrange<span class="token punctuation">(</span>len<span class="token punctuation">(</span>s1<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>     <span class="token keyword">if</span> s1<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">!=</span> s2<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">:</span>         <span class="token keyword">return</span> abs<span class="token punctuation">(</span>base64chars<span class="token punctuation">.</span>index<span class="token punctuation">(</span>s1<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">-</span> base64chars<span class="token punctuation">.</span>index<span class="token punctuation">(</span>s2<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>     <span class="token keyword">return</span> res<span class="token keyword">def</span> <span class="token function">solve_stego</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>     <span class="token keyword">with</span> open<span class="token punctuation">(</span><span class="token string">'stego.txt'</span><span class="token punctuation">,</span> <span class="token string">'rb'</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>         file_lines <span class="token operator">=</span> f<span class="token punctuation">.</span>readlines<span class="token punctuation">(</span><span class="token punctuation">)</span>    bin_str <span class="token operator">=</span> <span class="token string">''</span>     <span class="token keyword">for</span> line <span class="token keyword">in</span> file_lines<span class="token punctuation">:</span>        steg_line <span class="token operator">=</span> line<span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">'\n'</span><span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">)</span>        norm_line <span class="token operator">=</span> line<span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">'\n'</span><span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token string">'base64'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token string">'base64'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">'\n'</span><span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">)</span>       diff <span class="token operator">=</span> get_base64_diff_value<span class="token punctuation">(</span>steg_line<span class="token punctuation">,</span> norm_line<span class="token punctuation">)</span>        pads_num <span class="token operator">=</span> steg_line<span class="token punctuation">.</span>count<span class="token punctuation">(</span><span class="token string">'='</span><span class="token punctuation">)</span>        <span class="token keyword">if</span> diff<span class="token punctuation">:</span>          bin_str <span class="token operator">+=</span> bin<span class="token punctuation">(</span>diff<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">.</span>zfill<span class="token punctuation">(</span>pads_num <span class="token operator">*</span> <span class="token number">2</span><span class="token punctuation">)</span>        <span class="token keyword">else</span><span class="token punctuation">:</span>          bin_str <span class="token operator">+=</span> <span class="token string">'0'</span> <span class="token operator">*</span> pads_num <span class="token operator">*</span> <span class="token number">2</span>    res_str <span class="token operator">=</span> <span class="token string">''</span>     <span class="token keyword">for</span> i <span class="token keyword">in</span> xrange<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> len<span class="token punctuation">(</span>bin_str<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        res_str <span class="token operator">+=</span> chr<span class="token punctuation">(</span>int<span class="token punctuation">(</span>bin_str<span class="token punctuation">[</span>i<span class="token punctuation">:</span>i<span class="token operator">+</span><span class="token number">8</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span>     <span class="token keyword">print</span> res_strsolve_stego<span class="token punctuation">(</span><span class="token punctuation">)</span> <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>运行后拿到flag</p>]]></content>
      
      
      <categories>
          
          <category> python3 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
